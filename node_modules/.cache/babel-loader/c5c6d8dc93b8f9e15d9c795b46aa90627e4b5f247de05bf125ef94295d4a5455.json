{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANDY\\\\Documents\\\\fullstack\\\\Reactjs\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './componenets/Navbar';\nimport TextForm from './componenets/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './componenets/Alert';\nimport About from './componenets/About';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n  };\n  const toggleMode = cls => {\n    removeBodyClasses();\n    document.body.classList.add('bg-' + cls);\n    if (mode === 'light') {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Dark Mode';\n    } else if (cls === 'warning') {\n      showAlert(\"yellow mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Try TextUtils - word Counter, Character Counter,  Remove extra spaces\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","About","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","removeBodyClasses","document","body","classList","remove","toggleMode","cls","add","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/SANDY/Documents/fullstack/Reactjs/textutils/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './componenets/Navbar';\nimport TextForm from './componenets/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './componenets/Alert';\nimport About from './componenets/About';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=> {\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(()=> {\n        setAlert(null);\n      },1500);\n  }\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n  }\n  const toggleMode = (cls)=> {\n    removeBodyClasses();\n    document.body.classList.add('bg-'+cls);\n    if(mode === 'light')\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      // document.title = 'TextUtils - Dark Mode';\n    }\n    else if(cls === 'warning')\n    {\n      showAlert(\"yellow mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n     <Router>\n     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n     <Alert alert={alert}/>\n     <div className=\"container my-3\">\n       <Routes>\n        <Route exact path=\"/about\" element={<About mode={mode}/>}/> \n\n        <Route exact path=\"*\" element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - word Counter, Character Counter, \n        Remove extra spaces\" mode={mode}/>}/>\n\n        \n      </Routes>\n     </div>\n     </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,QACA,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAI;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAK;MACdL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAC,IAAI,CAAC;EACX,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;IAC1CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;IACzCH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;IAC5CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;IAC3CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;EAC9C,CAAC;EACD,MAAMC,UAAU,GAAIC,GAAG,IAAI;IACzBN,iBAAiB,EAAE;IACnBC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACI,GAAG,CAAC,KAAK,GAACD,GAAG,CAAC;IACtC,IAAGf,IAAI,KAAK,OAAO,EACnB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACM,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/Cd,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;MACjD;IACF,CAAC,MACI,IAAGW,GAAG,KAAK,SAAS,EACzB;MACEX,SAAS,CAAC,8BAA8B,EAAE,SAAS,CAAC;IACtD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACM,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7Cd,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;MAClD;IACF;EACF,CAAC;;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACCxB,OAAA,CAACJ,MAAM;MAAA4B,QAAA,gBACPxB,OAAA,CAACX,MAAM;QAACoC,KAAK,EAAC,WAAW;QAACpB,IAAI,EAAEA,IAAK;QAACc,UAAU,EAAEA;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC/D7B,OAAA,CAACP,KAAK;QAACc,KAAK,EAAEA;MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACtB7B,OAAA;QAAK8B,SAAS,EAAC,gBAAgB;QAAAN,QAAA,eAC7BxB,OAAA,CAACH,MAAM;UAAA2B,QAAA,gBACNxB,OAAA,CAACF,KAAK;YAACiC,KAAK;YAACC,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAEjC,OAAA,CAACN,KAAK;cAACW,IAAI,EAAEA;YAAK;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAE3D7B,OAAA,CAACF,KAAK;YAACiC,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEjC,OAAA,CAACV,QAAQ;cAACmB,SAAS,EAAEA,SAAU;cAACyB,OAAO,EAAC,uEACnD;cAAC7B,IAAI,EAAEA;YAAK;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAG9B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACG,iBACP;AAEP;AAACzB,EAAA,CA7DQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}