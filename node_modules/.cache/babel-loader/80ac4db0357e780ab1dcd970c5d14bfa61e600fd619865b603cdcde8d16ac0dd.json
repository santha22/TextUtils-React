{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANDY\\\\Documents\\\\fullstack\\\\Reactjs\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './componenets/Navbar';\nimport TextForm from './componenets/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './componenets/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mod ehas been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mod ehas been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/SANDY/Documents/fullstack/Reactjs/textutils/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './componenets/Navbar';\nimport TextForm from './componenets/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './componenets/Alert';\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=> {\n      setAlert({\n        msg: message,\n        type: type\n      })\n  }\n\n  const toggleMode = ()=> {\n    if(mode === 'light')\n    {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mod ehas been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mod ehas been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n     \n     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n     <Alert alert={alert}/>\n     <div className=\"container my-3\">\n      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n     </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAI;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;EACN,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAK;IACtB,IAAGR,IAAI,KAAK,OAAO,EACnB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CR,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACpD;EACF,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBAEClB,OAAA,CAACN,MAAM;MAACyB,KAAK,EAAC,WAAW;MAACd,IAAI,EAAEA,IAAK;MAACQ,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC/DvB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACtBvB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC9BlB,OAAA,CAACL,QAAQ;QAACc,SAAS,EAAEA,SAAU;QAACgB,OAAO,EAAC,iCAAiC;QAACpB,IAAI,EAAEA;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClF;EAAA,gBACJ;AAEP;AAACnB,EAAA,CAnCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}